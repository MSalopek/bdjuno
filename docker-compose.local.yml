version: '3.6'
services:
  # use dockerized pg in local development
  pg-juno:
    container_name: pg-juno
    image: postgres:14-alpine
    shm_size: '2gb'
    command: postgres -c work_mem=30MB
    environment:
      - POSTGRES_USER=bdjuno
      - POSTGRES_PASSWORD=bdjuno
      - POSTGRES_DB=bdjuno
      - PGDATA=/var/lib/postgresql/data
    ports:
      - 5432:5432
    # bind volumes
    volumes:
      - ./devenv/data:/var/lib/postgresql/data
      - ./devenv/init.sql:/docker-entrypoint-initdb.d/create_tables.sql

  hasura:
    image: hasura/graphql-engine:v2.0.4
    ports:
    - "8080:8080"
    restart: always
    depends_on:
      - pg-juno
    environment:
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      ## postgres database to store Hasura metadata
      # HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://bdjuno:bdjuno@pg-juno:5432/bdjuno
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      HASURA_GRAPHQL_DATABASE_URL: postgres://bdjuno:bdjuno@pg-juno:5432/bdjuno
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ACTION_BASE_URL: http://localhost:3000
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: supersecret

  # wait-for-db:
  #   image: dadarek/wait-for-dependencies
  #   depends_on:
  #     - pg-juno
  #   command: db:5432

  # bdjuno:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   restart: always
  #   command: bdjuno start --home /bdjuno/.bdjuno
  #   depends_on:
  #     - pg-juno
  #   volumes:
  #     ## Modify first path to match configuration file.
  #     - ./build:/bdjuno/.bdjuno
